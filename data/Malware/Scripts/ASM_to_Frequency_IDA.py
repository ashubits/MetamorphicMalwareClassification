#!/usr/bin python2

import os
import sys
import argparse

f1 = open('opcodeList.txt', 'r')
opcodes=[]
opcodes.append('FileName')						#opcodeList
for eachLine in f1:
	opcodes.extend(eachLine.split()) 			#adding all opcodes in an array
f1.close()

num_opcodes=len(opcodes)-1

'''
print "Enter the name of the output file: (Ex: frequency_data.csv) "
out_file= raw_input("Name: " )

print "Folder to scan for .ASM files: (Ex: /home/user/files)"
folderLoc= raw_input("Enter folder location: ")
'''

parser = argparse.ArgumentParser(description='Output a csv file containing the frequency of all opcodes for each .asm file in the specified directory.')
parser.add_argument('-d','--directory', help='Location of Directory(folder) to scan for .asm files', required=True)
parser.add_argument('-o','--outfile', help='Name of the output .csv file', required=True)
args = vars(parser.parse_args())

folderLoc=args['directory']
out_file=args['outfile']

if not os.path.exists(folderLoc):
	print "Directory doesn't exist"
	sys.exit()

files=[]
for file in os.listdir(folderLoc):
    if file.endswith(".ASM"):
    	files.append(file)
    if file.endswith(".asm"):
    	files.append(file)

if len(files)==0:
	print "No .ASM or .asm files exist in folder specified"
	sys.exit()

# print "Working..."

# orig_stdout = sys.stdout

# sys.stdout = open('%s' % out_file, 'w')

outfile= open('%s' % out_file, 'w')

firstLine=[]
firstLine.append('FileName')
for i in range(1,num_opcodes+1):
	firstLine.append(i)
outfile.write( ",".join(str(x) for x in firstLine))
outfile.write("\n")
for file in files:
	f1 = open(os.path.join(folderLoc, file), 'r')
	number=[0]*(num_opcodes+1)
	number[0]='%s' % file
	for line in f1:
		splitter = line.split()
		if splitter: 											#checking for null
			a=splitter[0]										#saving first word
			if not(a.startswith(';') or a.endswith(':')): 		#detecting comment or a function
				if a in opcodes:								
					number[opcodes.index(a)]+=1					#increase freq if a is in opcodes

	outfile.write( ",".join(str(x) for x in number))
	outfile.write("\n")
	f1.close()

# sys.stdout.close()
# sys.stdout = orig_stdout
outfile.close()
# print "Done! Saved to file",out_file