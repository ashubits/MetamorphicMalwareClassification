#!/usr/bin python2
import os,sys
import argparse

f1 = open('opcodeList.txt', 'r')
opcodes=[]
opcodes.append('FileName')
for eachLine in f1:
	opcodes.extend(eachLine.split())
f1.close()

num_opcodes=len(opcodes)-1

'''
print "Enter the name of the output file: (Ex: frequency_data.csv) "
out_file= raw_input("Name: " )

print "Folder to scan for .ASM files: (Ex: /home/user/files)"
folderLoc= raw_input("Enter folder location: ")
'''

parser = argparse.ArgumentParser(description='Output a csv file containing the frequency of all opcodes for each .asm file in the specified directory.')
parser.add_argument('-d','--directory', help='Location of Directory(folder) to scan for .asm files', required=True)
parser.add_argument('-o','--outfile', help='Name of the output .csv file', required=True)
args = vars(parser.parse_args())

folderLoc=args['directory']
out_file=args['outfile']

def CheckHex(var):
    try:
        Hex=int(var, 16)
        return True
    except ValueError: 
        return False

if not os.path.exists(folderLoc):
	print "Directory doesn't exist"
	sys.exit()

files=[]
for file in os.listdir(folderLoc):
    if file.endswith(".ASM"):
    	files.append(file)
    if file.endswith(".asm"):
    	files.append(file)

if len(files)==0:
	print "No .ASM or .asm files exist in folder specified"
	sys.exit()

# print "Working..."

# orig_stdout = sys.stdout

# sys.stdout = open('%s' % out_file, 'w')
outfile= open('%s' % out_file, 'w')

firstLine=[]
firstLine.append('FileName')
for i in range(1,num_opcodes+1):
	firstLine.append(i)
outfile.write(",".join(str(x) for x in firstLine))

for file in files:
	f1 = open(os.path.join(folderLoc, file), 'r')
	# f1 = open('%s' % file, 'r')
	number=[0]*(num_opcodes+1)
	number[0]='%s' % file
	for line in f1:
		if line:
			splitter = line.split()
			if len(splitter)>2:
				count=0
				# print splitter
				for j in xrange(2,len(splitter)):

					a=splitter[j]
					if len(a)==2:
						if CheckHex(a):
							continue

					if a[:1]=='$' or a[:2]=='0x' or a[:1]=='%' or a[:1]=='*' or a[:1]=='-' or a[:1]=='(':
						break

					if count <3:
						if a in opcodes:
							number[opcodes.index(a)]+=1
							# break
					else: break
					count+=1


	outfile.write( ",".join(str(x) for x in number))
	f1.close()

# sys.stdout.close()
# sys.stdout = orig_stdout
outfile.close()
# print "Done! Saved to file",out_file